name: Setup Wasp CLI
description: |
  This action build on setuo-haskell action, and further sets up node.
  Then it installs the Wasp dependencies followed by installt the Wasp CLI.

inputs:
  node-version:
    description: |
      The version of Node to install.
    required: false
    default: "lts/*"

  # Inherited from setup-haskell, without default values.
  ghc-version:
    description: |
      The version of GHC to install.
    required: false

  cabal-version:
    description: |
      The version of Cabal to install.
    required: false

  cabal-project-dir:
    description: |
      The working directory for the action.
    required: false

  extra-cache-key-segment:
    description: |
      An extra key to use for the Haskell cache. Mainly used to keep glibc and musl
      caches separate, as they are not compatible.
    required: false

defaults:
  shell: bash

runs:
  using: composite

  steps:
    - uses: "actions/checkout@v4"
      with:
        # Workaround for a Github Checkout action bug
        # https://github.com/actions/checkout/issues/1359#issuecomment-1567902034
        ref: ${{ github.event.pull_request.head.sha }}

    # # TODO: This is a temporary workaround for the failing GHCup installation on Ubuntu 20.04.
    # # The fix will be propagated in a few days, so we can remove this workaround then.
    # # https://github.com/actions/runner-images/issues/7061
    # - name: Workaround runner image issue
    #   if: matrix.os == 'ubuntu-22.04'
    #   run: sudo chown -R $USER /usr/local/.ghcup

    - name: Set up Haskell
      uses: ./.github/actions/setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-project-dir: waspc
        extra-cache-key-segment: ${{ inputs.extra-cache-key-segment }}

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    # - name: packages/ts-inspect - Run tests
    #   if: matrix.os == 'ubuntu-22.04' || matrix.os == 'macos-13'
    #   run: |
    #     cd packages/ts-inspect
    #     npm ci
    #     npm test

    - name: Compile TS packages and move it into the Cabal data dir
      run: ./tools/install_packages_to_data_dir.sh

    - name: Build external dependencies
      run: cabal build --enable-tests --enable-benchmarks --only-dependencies

    - name: Build wasp code
      run: cabal build all

    - name: Install Wasp CLI
      id: headless-install-wasp-cli
      run: cabal install
