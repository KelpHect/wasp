"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[83625],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=i,k=c["".concat(l,".").concat(d)]||c[d]||m[d]||r;return n?a.createElement(k,s(s({ref:t},u),{},{components:n})):a.createElement(k,s({ref:t},u))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},46300:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),i=n(50012);function r(e){let{path:t}=e;const[n]=(0,i.Nk)("docusaurus.tab.js-ts"),r=t.lastIndexOf("{"),s=t.slice(r+1,t.length-1),[o,l]=s.split(","),p=t.slice(0,r);return a.createElement("code",null,p+("js"===n?o:l))}},87587:(e,t,n)=>{n.d(t,{Fi:()=>o,Jp:()=>r,Vp:()=>i,aH:()=>s});var a=n(67294);const i=e=>{let{color:t,children:n}=e;return a.createElement("span",{style:{border:`2px solid ${t}`,display:"inline-block",padding:"0.2em 0.4em",color:t,borderRadius:"0.4em",fontSize:"0.8em",lineHeight:"1",fontWeight:"bold"}},n)};function r(){return a.createElement(i,{color:"#0b62f5"},"internal")}function s(){return a.createElement(i,{color:"#f59e0b"},"required")}function o(){return a.createElement(i,{color:"#08c47e"},"optional")}},91063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=n(87462),i=(n(67294),n(3905)),r=(n(46300),n(87587));const s={title:"Type-Safe Links"},o=void 0,l={unversionedId:"advanced/links",id:"version-0.16.0/advanced/links",title:"Type-Safe Links",description:"If you are using Typescript, you can use Wasp's custom Link component to create type-safe links to other pages on your site.",source:"@site/versioned_docs/version-0.16.0/advanced/links.md",sourceDirName:"advanced",slug:"/advanced/links",permalink:"/docs/advanced/links",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/versioned_docs/version-0.16.0/advanced/links.md",tags:[],version:"0.16.0",frontMatter:{title:"Type-Safe Links"},sidebar:"docs",previous:{title:"Configuring Middleware",permalink:"/docs/advanced/middleware-config"},next:{title:"Wasp Language (.wasp)",permalink:"/docs/general/language"}},p={},u=[{value:"Using the <code>Link</code> Component",id:"using-the-link-component",level:2},{value:"Catch-all Routes",id:"catch-all-routes",level:3},{value:"Optional Static Segments",id:"optional-static-segments",level:3},{value:"Using Search Query &amp; Hash",id:"using-search-query--hash",level:3},{value:"The <code>routes</code> Object",id:"the-routes-object",level:2},{value:"Optional Static Segments",id:"optional-static-segments-1",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"<code>Link</code> Component",id:"link-component",level:3},{value:"<code>routes</code> Object",id:"routes-object",level:3}],c={toc:u},m="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"If you are using Typescript, you can use Wasp's custom ",(0,i.kt)("inlineCode",{parentName:"p"},"Link")," component to create type-safe links to other pages on your site."),(0,i.kt)("h2",{id:"using-the-link-component"},"Using the ",(0,i.kt)("inlineCode",{parentName:"h2"},"Link")," Component"),(0,i.kt)("p",null,"After you defined a route:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'route TaskRoute { path: "/task/:id", to: TaskPage }\npage TaskPage { ... }\n')),(0,i.kt)("p",null,"You can get the benefits of type-safe links by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"Link")," component from ",(0,i.kt)("inlineCode",{parentName:"p"},"wasp/client/router"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="TaskList.tsx"',title:'"TaskList.tsx"'},"import { Link } from 'wasp/client/router'\n\nexport const TaskList = () => {\n  // ...\n\n  return (\n    <div>\n      {tasks.map((task) => (\n        <Link\n          key={task.id}\n          to=\"/task/:id\"\n          {/* \ud83d\udc46 You must provide a valid path here */}\n          params={{ id: task.id }}>\n          {/* \ud83d\udc46 All the params must be correctly passed in */}\n          {task.description}\n        </Link>\n      ))}\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"catch-all-routes"},"Catch-all Routes"),(0,i.kt)("p",null,"If a route path ends with a ",(0,i.kt)("inlineCode",{parentName:"p"},"/*")," pattern (also known as ",(0,i.kt)("a",{parentName:"p",href:"https://reactrouter.com/en/main/route/route#splats"},"splat"),"), you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"Link")," component like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'route CatchAllRoute { path: "/pages/*", to: CatchAllPage }\npage CatchAllPage { ... }\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="TaskList.tsx"',title:'"TaskList.tsx"'},"<Link to=\"/pages/*\" params={{ '*': 'about' }}>\n  About\n</Link>\n")),(0,i.kt)("p",null,"This will result in a link like this: ",(0,i.kt)("inlineCode",{parentName:"p"},"/pages/about"),"."),(0,i.kt)("h3",{id:"optional-static-segments"},"Optional Static Segments"),(0,i.kt)("p",null,"If a route contains optional static segments, you'll need to specify one of the possible paths:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'route OptionalRoute { path: "/task/:id/details?", to: OptionalPage }\npage OptionalPage { ... }\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="TaskList.tsx"',title:'"TaskList.tsx"'},'/* You can include ... */\n<Link to="/task/:id/details" params={{ id: 1 }}>\n  Task 1\n</Link>\n\n/* ... or exclude the optional segment */\n<Link to="/task/:id" params={{ id: 1 }}>\n  Task 1\n</Link>\n')),(0,i.kt)("h3",{id:"using-search-query--hash"},"Using Search Query & Hash"),(0,i.kt)("p",null,"You can also pass ",(0,i.kt)("inlineCode",{parentName:"p"},"search")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hash")," props to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Link")," component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="TaskList.tsx"',title:'"TaskList.tsx"'},'<Link\n  to="/task/:id"\n  params={{ id: task.id }}\n  search={{ sortBy: \'date\' }}\n  hash="comments"\n>\n  {task.description}\n</Link>\n')),(0,i.kt)("p",null,"This will result in a link like this: ",(0,i.kt)("inlineCode",{parentName:"p"},"/task/1?sortBy=date#comments"),". Check out the ",(0,i.kt)("a",{parentName:"p",href:"#link-component"},"API Reference")," for more details."),(0,i.kt)("h2",{id:"the-routes-object"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"routes")," Object"),(0,i.kt)("p",null,"You can also get all the pages in your app with the ",(0,i.kt)("inlineCode",{parentName:"p"},"routes")," object:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="TaskList.tsx"',title:'"TaskList.tsx"'},"import { routes } from 'wasp/client/router'\n\nconst linkToTask = routes.TaskRoute.build({ params: { id: 1 } })\n")),(0,i.kt)("p",null,"This will result in a link like this: ",(0,i.kt)("inlineCode",{parentName:"p"},"/task/1"),"."),(0,i.kt)("h3",{id:"optional-static-segments-1"},"Optional Static Segments"),(0,i.kt)("p",null,"If a route contains optional static segments, you'll need to specify one of the possible paths:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'route OptionalRoute { path: "/task/:id/details?", to: OptionalPage }\npage OptionalPage { ... }\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="TaskList.tsx"',title:'"TaskList.tsx"'},"const linkToOptional = routes.OptionalRoute.build({\n  path: '/task/:id/details', // or '/task/:id'\n  params: { id: 1 },\n})\n")),(0,i.kt)("p",null,"You can also pass ",(0,i.kt)("inlineCode",{parentName:"p"},"search")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hash")," props to the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," function. Check out the ",(0,i.kt)("a",{parentName:"p",href:"#routes-object"},"API Reference")," for more details."),(0,i.kt)("h2",{id:"api-reference"},"API Reference"),(0,i.kt)("h3",{id:"link-component"},(0,i.kt)("inlineCode",{parentName:"h3"},"Link")," Component"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Link")," component accepts the following props:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"to")," ",(0,i.kt)(r.aH,{mdxType:"Required"})),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A valid Wasp Route path from your ",(0,i.kt)("inlineCode",{parentName:"p"},"main.wasp")," file."),(0,i.kt)("p",{parentName:"li"},"In the case of optional static segments, you must provide one of the possible paths which include or exclude the optional segment. For example, if the path is ",(0,i.kt)("inlineCode",{parentName:"p"},"/task/:id/details?"),", you must provide either ",(0,i.kt)("inlineCode",{parentName:"p"},"/task/:id/details")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"/task/:id"),".")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"params: { [name: string]: string | number }")," ",(0,i.kt)(r.aH,{mdxType:"Required"})," (if the path contains params)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"An object with keys and values for each param in the path."),(0,i.kt)("li",{parentName:"ul"},"For example, if the path is ",(0,i.kt)("inlineCode",{parentName:"li"},"/task/:id"),", then the ",(0,i.kt)("inlineCode",{parentName:"li"},"params")," prop must be ",(0,i.kt)("inlineCode",{parentName:"li"},"{ id: 1 }"),". Wasp supports required and optional params."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"search: string[][] | Record<string, string> | string | URLSearchParams")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Any valid input for ",(0,i.kt)("inlineCode",{parentName:"li"},"URLSearchParams")," constructor."),(0,i.kt)("li",{parentName:"ul"},"For example, the object ",(0,i.kt)("inlineCode",{parentName:"li"},"{ sortBy: 'date' }")," becomes ",(0,i.kt)("inlineCode",{parentName:"li"},"?sortBy=date"),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"hash: string"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"all other props that the ",(0,i.kt)("inlineCode",{parentName:"p"},"react-router-dom"),"'s ",(0,i.kt)("a",{parentName:"p",href:"https://reactrouter.com/en/6.26.1/components/link"},"Link")," component accepts"))),(0,i.kt)("h3",{id:"routes-object"},(0,i.kt)("inlineCode",{parentName:"h3"},"routes")," Object"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"routes")," object contains a function for each route in your app."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="router.tsx"',title:'"router.tsx"'},'export const routes = {\n  // RootRoute has a path like "/"\n  RootRoute: {\n    build: (options?: {\n      search?: string[][] | Record<string, string> | string | URLSearchParams\n      hash?: string\n    }) => // ...\n  },\n\n  // DetailRoute has a path like "/task/:id/:userId?"\n  DetailRoute: {\n    build: (\n      options: {\n        params: { id: ParamValue; userId?: ParamValue; },\n        search?: string[][] | Record<string, string> | string | URLSearchParams\n        hash?: string\n      }\n    ) => // ...\n  },\n\n  // OptionalRoute has a path like "/task/:id/details?"\n  OptionalRoute: {\n    build: (\n      options: {\n        path: \'/task/:id/details\' | \'/task/:id\',\n        params: { id: ParamValue },\n        search?: string[][] | Record<string, string> | string | URLSearchParams\n        hash?: string\n      }\n    ) => // ...\n  },\n\n  // CatchAllRoute has a path like "/pages/*"\n  CatchAllRoute: {\n    build: (\n      options: {\n        params: { \'*\': ParamValue },\n        search?: string[][] | Record<string, string> | string | URLSearchParams\n        hash?: string\n      }\n    ) => // ...\n  },\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"params")," object is required if the route contains params. The ",(0,i.kt)("inlineCode",{parentName:"p"},"search")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hash")," parameters are optional."),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"routes")," object like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { routes } from 'wasp/client/router'\n\nconst linkToRoot = routes.RootRoute.build()\nconst linkToTask = routes.DetailRoute.build({ params: { id: 1 } })\nconst linkToOptional = routes.DetailRoute.build({\n  path: '/task/:id/details',\n  params: { id: 1 },\n})\nconst linkToCatchAll = routes.CatchAllRoute.build({\n  params: { '*': 'about' },\n})\n")))}d.isMDXComponent=!0}}]);